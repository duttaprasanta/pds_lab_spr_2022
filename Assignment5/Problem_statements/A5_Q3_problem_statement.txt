Declare a 2D integer array a[][] and define its size (#rows and #columns) taking user input. dynamically allocate the arrays. Fill up it by integer values from the user.
Write another function to find its saddle point(s) and print on the terminal (in main()).
If there is none, then print that message.
(An element is a saddle point if it is the unique maximum (or minimum) in its row but the unique minimum (resp., maximum) in its column.)
Write suitable functions. Comment your code.

Examples:

1 5 7
1 2 1
7 3 4

In the above array, a[1][1] = 2 is a saddle point.

1 5 7
1 2 2
7 3 4

In the above array, there is no saddle point. (Because the maximum in the 2nd row is not unique.)

5 1 4
6 2 7
8 3 9

In the above array, there are two saddle points: a[0][0] = 5 and a[2][1] = 3.