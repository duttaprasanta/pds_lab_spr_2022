Consider an integer array a = {a_1, a_2, ... , a_n}. Suppose the elements are in the range from r1 to r2. We wish to see the distribution of array elements in some ranges. To do this, we wil create "bins" that divides the entire range of values into a series of consecutive, equal, non-overlapping intervals and then count how many values fall into each interval. The number of elements of each bin may differ from each other.

For example, consider an array a[] = {10, 1, 14, 5, 22, 51, 46, 37, 9, 27, 55, 49, 72, 24, 47, 4, 67, 30, 40, 15}. We wish to see the distribution in 4 intervals. Since the elements have range from 1 to 72, the bins/intervals will be the following: 1-18, 19-36, 37-54, 55-72. The elements of each bin will be:
bin1-> 10, 4, 14, 5, 9, 1, 15
bin2-> 22, 27, 24, 30
bin3-> 51, 46, 37, 49, 47, 40
bin4-> 55, 72, 67

Your task is to take the number of array elements from the user, dynamically allocate an array accordingly, take the array elements and the number of bins from the user. Next, create bins by dynamic memory allocation and put the array elements in appropriate beans, output the bin contents as well as number of elements in each bin.
Write suitable functions. Comment your code.

Ex:
Enter the numner of array elements: 10
Enter the array elements: 12, 29, 20, 3, 9, 11, 26, 17, 4, 19
Enter the number of bins: 3

Output:
bin1-> 3, 9, 11, 4    Number of elements in bin1 = 4
bin2-> 12, 20, 17, 19   Number of elements in bin2 = 4
bin3-> 29, 26    Number of elements in bin3 = 2